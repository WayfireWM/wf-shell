[background]
# Full path to image or directory of images
# image = /usr/share/wayfire/wallpaper.jpg
# How to fit the image to screens
# One of: fill_and_crop, preserve_aspect, stretch
fill_mode = stretch
# In the case of directory, timeout between changing backgrounds, in seconds
cycle_timeout = 150
# In the case of directory, whether or not to randomize images
randomize = 0



[panel]
# widgets_* is a space-separated list of widgets to be displayed
# at the corresponding part of the panel
# Supported widgets are: launchers clock network battery window-list volume menu notifications tray command-output
# Special widgets are "spacing" and "separator" widgets, they can be used to add padding everywhere on the panel
# To use them, just append the amount of pixels you want as a padding
# to the word "spacing" or "separator" and use it as a plugin
widgets_left = menu spacing4 launchers window-list
widgets_center = none
widgets_right = command-output tray notifications volume network battery clock

# The minimal size of the panel. Note that some widgets might force panel bigger than this size.
# All widgets also have individual settings for size
# Changing this requires a panel restart
minimal_height = 24

# automatically hide when pointer isn't over the panel
autohide = false

# time in milliseconds to wait before hiding
autohide_duration = 300

# layer can be top, bottom, overlay or background
layer = top

# where to position panel
# Possible values are only "top" and "bottom"
position = top

# set the background color.
background_color = gtk_headerbar # match the color of a GtkHeaderbar
#background_color = $555555 # Hex color, for example $FFFFFF for white
#background_color = 0.033 0.041 0.047 0.9 # RGBA color, 1.0 0.0 0.0 0.5 for semi-transparent red


# Configuration for the launchers widget
# can be a desktop file
launcher_chrome = google-chrome.desktop
launcher_firefox = firefox.desktop
launcher_terminal1 = terminator.desktop
launcher_terminal2 = org.gnome.Terminal.desktop
launcher_gedit = org.gnome.gedit.desktop

# or a combination of bash command + icon
launcher_cmd_1 = env XDG_CURRENT_DESKTOP=GNOME gnome-control-center
launcher_icon_1 = /usr/share/icons/gnome/48x48/categories/preferences-system.png

launcher_nau = org.gnome.Nautilus.desktop

# spacing between widgets, can be negative
launchers_spacing = 4

# size of the launcher icon
launchers_size = 42


# Configuration for the clock widget
# clock format, uses the Glib Time formatting
clock_format = %e %a %H:%M
# clock font
clock_font = DejaVu Sans:style=Book 12


# Configuration for the battery widget
# How much info to display:
# 0 -> only icon, 1 -> icon + percentage, 2 -> full info
battery_status = 1
battery_icon_size = 32

# invert the colors of the icon, needs to be adjusted according to the size of the icons,
# because some icon sizes are white, and others are black
battery_icon_invert = 1

# Font to use in the battery percentage indicator
battery_font = default


# Configuration for the network widget
# Whether to display connection details, for ex. Wifi AP name
network_status = 1

network_status_font = DejaVu Sans:style=Book 10
# network_icon_size = 30
network_icon_invert_color = 1

# whether to colour the wifi signal strength
network_status_use_color = yes

# Show a list of application categories in menu
menu_show_categories = false

# Show application icons in a list view
# false shows them as a grid
menu_list = false

# Configuration for the menu widget
# whether to enable fuzzy search in the menu
menu_fuzzy_search = 1

# Minimum width for category list. Shares height with content Below
menu_min_category_width = 200

# Minimum width and height for the contents of the menu.
# Can be useful for small screens and/or high DPI scaling.
menu_min_content_width = 500
menu_min_content_height = 500

# image file to use as the menu icon
# menu_icon = /usr/share/wayfire/icons/wayfire.png

# command run when the logout button is clicked
menu_logout_command = wayland-logout


# Configuration for the volume widget
# Number of seconds volume popover will display
# after scrolling on the volume icon
volume_display_timeout = 2.5


# Configuration for the tray widget
# Amount of smooth scrolling needed to trigger one scroll wheel step
tray_smooth_scrolling_threshold = 5

# The icon size to use for tray icons
tray_icon_size = 32

# Enable showing of the tray menu when using middle-click, otherwise, right-click is used
tray_menu_on_middle_click = false


# Configuration for the notifications widget
notifications_autohide_timeout = 2.5

# Show criticial notifications in do-not-disturb mode, which is triggered by middle-clicking the DND button.
notifications_critical_in_dnd = true
notifications_icon_size = 32


# Configuration for the command output widget, there may be multiple commands.
# The command output widget is used to display the output of a shell command, which can be periodically refreshed.
# For example, showing the current CPU temperature by parsing `sensors` output (command may need adjustment for your particular sensor name!)

# Maximum amount of characters to show in the panel, if the command's output is too long
commands_output_max_chars = 10

# A list of commands + attributes, multiple commands can be declared after one another. The commands are numbered 1, 2, 3, etc.

# The command to be run, uncomment and adapt according to the output of sensors on your system
#command_output_1 = sensors | grep Package | cut -d ' ' -f 5

# A command which is run and whose output is displayed in a tooltip when hovering the widget
#command_output_tooltip_1 = sensors

# Refresh the output of the command ever 1s. Can be set to -1 for manual updates with the mouse, or 0 for a single update at startup.
# command_output_period_1 = 1

# Optionally, an icon can be displayed next to the text. Leave empty (first option) for no icon.
# command_output_icon_1 = 
# command_output_icon_1 = text-x-script

# Position and size for the icon, if it is not empty
#command_output_icon_size_1 = 32
#command_output_icon_position_1 = left # or right, top, bottom

[dock]
# time in milliseconds to wait before hiding
autohide_duration = 300

# vertical alignment on the desktop
# the only possible values are "top" and "bottom"
position = bottom

# For applications that aren't installed/configured properly, you can manually
# set icons for given app_id's. Below is an example for IntelliJ IDEA
icon_mapping_jetbrains-idea-ce = /<path to intellij>/idea.png
